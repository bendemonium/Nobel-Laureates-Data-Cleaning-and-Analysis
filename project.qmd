---
title: "stat"
format: html
editor: visual
---

## Scraping

```{r}
library(rvest)
library(dplyr)
library(tidyr)
```

```{r}
source <- "https://en.wikipedia.org/wiki/List_of_Nobel_laureates"
page <- read_html(source)
tables <- html_table(page, fill = TRUE)
laureates <- tables[[1]]
laureates <- as_tibble(laureates)
```

```{r}
laureates |>
  glimpse()
```

```{r}
laureates <- laureates |>
  rename(`Physiology or Medicine` = `Physiologyor Medicine`,
         Economics = `Economics(The Sveriges Riksbank Prize)[13][a]`) |>
  mutate(Year = as.numeric(Year))
```

```{r}
laureates <- laureates |>
  pivot_longer(
    cols = -Year, 
    names_to = "Category",
    values_to = "Laureates"  # Create a new column for the laureates
  ) |>
  separate_rows(Laureates, sep = ";") |>
  filter(!grepl("â€”", Laureates))
```

```{r}
laureates
```

```{r}
counts <- laureates |>
  group_by(Year, Category) |>
  summarize(Total = n())
```

Now that we have the list of the Nobel Prize Laureates, we will find which of them are women. For that we'll have to source another page and a table from it.

```{r}
source <- "https://en.wikipedia.org/wiki/List_of_female_Nobel_laureates"
page <- read_html(source)
tables <- html_table(page, fill = TRUE)
female <- tables[[2]]
female <-female |>
  select(-c(X3,X7,X6,X5,X1)) |>
  mutate(Category = NA) |>
  rename(Year = X2,
         Laureate = X4) |>
  mutate(Year = as.numeric(Year))
```

```{r}
female$Category[3:15] <- "Physiology or Medicine"
female$Category[18:22] <- "Physics"
female$Category[25:32] <- "Chemistry"
female$Category[35:51] <- "Literature"
female$Category[54:72] <- "Peace"
female$Category[75:77] <- "Economics"

female <- female[-c(1,2,16,17,23,24,33,34,52,53,73,74), ]
```

```{r}
female_counts <- female |>
  group_by(Year, Category) |>
  summarize(Female = n())
```

```{r}
counts <- left_join(counts, female_counts, by = c("Year", "Category"))
```

```{r}
counts <- counts |>
  mutate(Female = replace_na(Female, 0))
```

Orgs

```{r}
counts <- counts |>
  mutate(Organization = 0) |>
  mutate(Organization = ifelse(Year %in% c(1904, 1910, 1917,
                                         1944, 1947, 1938) & Category == "Peace", 1, Organization),
         Organization = ifelse(Year == 1963 & Category == "Peace", 2, Organization),
         Male = Total - (Female + Organization)) 
```

```{r}
counts <- counts |>
  pivot_longer(cols = c(Female, Total, Organization, Male), 
               names_to = "CountType", 
               values_to = "Count")
```

```{r}
counts
```

```{r}
library(ggplot2)
theme_set(theme_bw())
```

```{r}
count_fil <- counts |>
  filter(!CountType=='Total')
```

```{r}
count_fil |>
  ggplot(aes(x = Year, y= Count, color = CountType)) +
  geom_point(alpha = 0.5) +
  facet_wrap(~ Category, scales = "free_y")
```

```{r}
count_total <- counts |>
  filter(CountType == "Total") |>
  group_by(Year) |>
  summarise(Total = sum(Count, na.rm = TRUE))
ggplot(count_total, aes(x = Year, y = Total)) +
  geom_line() +
  geom_smooth(method = "lm", se = TRUE)
  
```

```{r}
count_fil |>
  ggplot(aes(x = Year, y= Count, color = CountType)) +
  geom_line() +
  facet_wrap(~ Category, scales = "free_y")
```

```{r}
ggplot(count_fil, aes(x = Year, y = Count, color = Category, group = Category)) +
  geom_line() +
  facet_grid(rows = vars(CountType), scales = "fixed") +
  labs(title = "Counts by Year and Category",
       x = "Year",
       y = "Count",
       color = "Category") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), 
        strip.text.x = element_text(size = 12, face = "bold")) 

```

```{r}
proportions <- count_fil |>
  group_by(Year) |>
  summarise(Female_prop = sum(Count[CountType == "Female"]) / sum(Count),
            Male_prop = sum(Count[CountType == "Male"]) / sum(Count),
            Org_prop = sum(Count[CountType == "Organization"]) / sum(Count))
```

```{r}
count_fil
```

```{r}
 count_fil |>
    ggplot() +
    geom_col(aes(x = Year,
                y = Count,
                fill = as.factor(CountType)),
           position = "fill", 
           color= "black", 
           linewidth = 0.1) +
    facet_wrap(~Category, 
             scales = "free_x") +
    theme(legend.position = "top",
          strip.background = element_blank(),
          strip.text.x = element_blank()) +
    labs(y = "Topic Percentage Share")
```

```{r}
count_fil |>
  ggplot(aes(x = Count, y = as.factor(Year), fill=CountType)) +
  geom_bar(stat = "identity") +
  labs(x = "Count",
       y = "Year") +
  theme(legend.position = "top") 
```
